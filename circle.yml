machine:
  environment:
    # We need to set this variable to let Anaconda take precedence
    PATH: "/home/ubuntu/miniconda/envs/circleenv/bin:/home/ubuntu/miniconda/bin:$PATH"
    DISPLAY: ":99.0"

dependencies:
  cache_directories:
    - "~/spykes_data"
    - "~/miniconda"
  # Various dependencies
  pre:
    # Get a running Python
    - cd ~;
    # Disable pyenv (no cleaner way provided by CircleCI as it prepends pyenv version to PATH)
    - rm -rf ~/.pyenv;
    - rm -rf ~/virtualenvs;
    # Get Anaconda and conda-based requirements
    - >
      if [ ! -d "/home/ubuntu/miniconda" ]; then
        echo "Setting up conda";
        wget -q http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O ~/miniconda.sh;
        chmod +x ~/miniconda.sh;
        ~/miniconda.sh -b -p /home/ubuntu/miniconda;
        conda update --yes --quiet conda;
        conda create -n circleenv --yes pip python=2.7 pip;
        sed -i "s/ENABLE_USER_SITE = .*/ENABLE_USER_SITE = False/g" /home/ubuntu/miniconda/envs/circleenv/lib/python2.7/site.py;
      else
        echo "Conda already set up.";
      fi
    - conda install -n circleenv --yes numpy scipy scikit-learn matplotlib sphinx pillow six IPython pandas;
  override:
    - pip install sphinx coverage
    - pip install sphinx-gallery sphinx_bootstrap_theme sphinx_rtd_theme
    - pip install deepdish
    - pip install -e .
    # we need to do this here so the datasets will be cached
    # pipefail is necessary to propagate exit codes
    - set -o pipefail && cd doc && make html_dev-pattern PATTERN=plot_\\\(?\\!crcns_dataset_example\\\) 2>&1 | tee ~/log.txt

test:
  override:
    # workaround - make html returns 0 even if examples fail to build
    # (see https://github.com/sphinx-gallery/sphinx-gallery/issues/45)
    - cat ~/log.txt && if grep -q "Traceback (most recent call last):" ~/log.txt; then false; else true; fi

general:
  artifacts:
    - "doc/_build/html"
    - "coverage"
    - "~/log.txt"